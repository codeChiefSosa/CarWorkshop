@model CarWorkshop.Models.Car

@{
    ViewData["Title"] = "Edit";
}

<div class="row d-flex flex-column align-content-center">
    <div class="col-md-6 d-flex justify-content-center border border-primary">
        <form asp-action="Edit" class="w-100">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group text-center">
                <div class="control-label font-weight-bold">
                    Brand: <span class="font-weight-normal">@Model.Brand</span>
                </div>
                <div class="control-label font-weight-bold">
                    License plates: <span class="font-weight-normal">@Model.Plates</span>
                </div>
            </div>
            <hr/>
            <h5 class="text-center">List of faults:</h5>
            @if(!String.IsNullOrEmpty(Model.RepairList))
            {
            @foreach (var fault in Model.RepairList.Split(","))
            {
        <div id="" class="d-flex justify-content-between m-3">
            <p>@fault</p>
            <input class="btn btn-primary w-25" type="button" value="Repair" onclick="removeFault('@Model.Id','@fault',this)" />
        </div>
                }
            }
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


}
